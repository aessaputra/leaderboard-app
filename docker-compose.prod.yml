services:
  db:
    image: postgres:16-alpine
    container_name: pes_trophy_db
    environment:
      POSTGRES_DB: pes_trophy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: Asia/Jakarta
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pes_trophy"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: pes-trophy-app:prod
    environment:
      NODE_ENV: production
      TZ: Asia/Jakarta
      PORT: 3000
      # Ganti sesuai domain/host produksi
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-change-me-in-prod}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/pes_trophy}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    # Tidak perlu volume pada production (image immutable)

volumes:
  db_data:

