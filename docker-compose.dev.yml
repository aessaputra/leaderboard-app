services:
  db:
    image: postgres:16-alpine
    container_name: pes_trophy_db
    environment:
      POSTGRES_DB: pes_trophy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: Asia/Jakarta
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d pes_trophy']
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /app
    environment:
      NODE_ENV: development
      TZ: Asia/Jakarta
      DATABASE_URL: postgresql://postgres:postgres@db:5432/pes_trophy
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: dev-secret-change-me
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - pnpm_store:/root/.local/share/pnpm/store
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    command: sh -lc "pnpm prisma generate && pnpm dev -p 3000 -H 0.0.0.0"

  # Opsional: UI untuk Postgres
  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: pes_trophy_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      TZ: Asia/Jakarta
    ports:
      - '5050:80'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    # Bisa auto-register server Postgres kalau mau:
    # configs:
    #   - source: pgadmin_servers
    #     target: /pgadmin4/servers.json

volumes:
  db_data:
  node_modules:
  pnpm_store:
  pgadmin_data:
# configs:
#   pgadmin_servers:
#     file: ./ops/pgadmin/servers.json
